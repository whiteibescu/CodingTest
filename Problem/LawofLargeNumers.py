"""입력 조건"""
# 첫째 줄에 (2<= N > = 1000), M(1<= M <= 10000), K(1<= K <=10000)의 자연수가 주어지며, 각 자연수는 공백으로 구분한다.
# 둘째 줄에 N개의 자연수가 주어진다. 각 자연수는 공백으로 구분한다. 단, 각각의 자연수는 1 이상 10,000 이하의 수로 주어진다.
# 입력으로 주어지는 K는 항상 M보다 작거나 같다.

"""출력 조건"""
# 첫째 줄에 동빈이의 큰 수의 법칙에 따라 더해진 답을 출력한다.
# 다양한 수로 이루어진 배열이 있을 때 주어진 수들을 M번 더하여 가장 큰 수를 만드는 법칙이다. 단, 배열의 특정한 인덱스(번호)에 해당하는
# 수가 연속해서 K번을 초과하여 더해질 수 없다.

# N, M, K를 공백으로 구분하여 입력받기
n, m, k = map(int, input().split())
# N개의 수를 공백으로 구분하여 입력받기
data = list(map(int, input().split()))

data.sort()  # 입력받은 수들 정렬하기
first = data(n - 1)  # 가장 큰 수
second = data[n - 2]  # 두번째로 큰 수

result = 0
while True:
    for i in range(k):  # 가장 큰 수를 K번 더하기
        if m == 0:  # m이 0 이라면 반복문 탈출
            break
        result += first
        m -= 1  # 더할 때마다 1씩 빼기
    if m == 0:  # m 이라면 반복문 탈출
        break
    result += second  # 두 번째로 큰 수를 한 번 더하기
    m -= 1  # 더할 때마다 1씩 빼기

print(result)  # 최종 답안 출력
