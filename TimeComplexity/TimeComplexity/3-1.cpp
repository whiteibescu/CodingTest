
/* 
예제 3-1 거스름돈

문제
당신은 음식점의 계산을 도와주는 점원이다. 카운터에는 거스름돈으로 
사용할 500원, 100원, 50원, 10원짜리 동전이 무한히 존재한다고 가정한다. 
손님에게 거슬러 줘야 할 돈이 N원일 때 거슬러줘야 할 동전의 최소 개수를 구하라. 
단, 거슬러 줘야 할 돈 N은 항상 10의 배수이다.

해답
가장 큰 화폐 단위부터 돈을 거슬러 주는 것이다.*/

#include <iostream>

int main()
{
	int n = 1260;
	int cnt = 0;
    int coin_Types[4] = { 500, 100, 50, 10 };

	for (int i = 0; i < 4; ++i)
	{
		int coin = coin_Types[i];
		cnt += n / coin;
		n %= coin;
	}
	printf("결과물은 %d", cnt);

}

//#include <bits/stdc++.h>
//
//using namespace std;
//
//int n = 1260;
//int cnt = 0;
//int coinTypes[4] = { 500, 100, 50, 10 };
//
//int main() {
//    for (int i = 0; i < 4; i++) {
//        int coin = coinTypes[i];
//        cnt += n / coin;
//        n %= coin;
//    }
//    cout << cnt << '\n';
//}